//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientService1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Car", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary1")]
    [System.SerializableAttribute()]
    public partial class Car : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string brandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool is_electricField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int production_yearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Desc {
            get {
                return this.DescField;
            }
            set {
                if ((object.ReferenceEquals(this.DescField, value) != true)) {
                    this.DescField = value;
                    this.RaisePropertyChanged("Desc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string brand {
            get {
                return this.brandField;
            }
            set {
                if ((object.ReferenceEquals(this.brandField, value) != true)) {
                    this.brandField = value;
                    this.RaisePropertyChanged("brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool is_electric {
            get {
                return this.is_electricField;
            }
            set {
                if ((this.is_electricField.Equals(value) != true)) {
                    this.is_electricField = value;
                    this.RaisePropertyChanged("is_electric");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int production_year {
            get {
                return this.production_yearField;
            }
            set {
                if ((this.production_yearField.Equals(value) != true)) {
                    this.production_yearField = value;
                    this.RaisePropertyChanged("production_year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICarComp", CallbackContract=typeof(ClientService1.ServiceReference1.ICarCompCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ICarComp {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarComp/addCar", ReplyAction="http://tempuri.org/ICarComp/addCarResponse")]
        bool addCar(ClientService1.ServiceReference1.Car n1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarComp/addCar", ReplyAction="http://tempuri.org/ICarComp/addCarResponse")]
        System.Threading.Tasks.Task<bool> addCarAsync(ClientService1.ServiceReference1.Car n1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarComp/removeCar", ReplyAction="http://tempuri.org/ICarComp/removeCarResponse")]
        bool removeCar(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarComp/removeCar", ReplyAction="http://tempuri.org/ICarComp/removeCarResponse")]
        System.Threading.Tasks.Task<bool> removeCarAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarComp/getCar", ReplyAction="http://tempuri.org/ICarComp/getCarResponse")]
        ClientService1.ServiceReference1.Car getCar(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarComp/getCar", ReplyAction="http://tempuri.org/ICarComp/getCarResponse")]
        System.Threading.Tasks.Task<ClientService1.ServiceReference1.Car> getCarAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarComp/getBrand", ReplyAction="http://tempuri.org/ICarComp/getBrandResponse")]
        string getBrand(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarComp/getBrand", ReplyAction="http://tempuri.org/ICarComp/getBrandResponse")]
        System.Threading.Tasks.Task<string> getBrandAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarComp/getPrice", ReplyAction="http://tempuri.org/ICarComp/getPriceResponse")]
        int getPrice(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarComp/getPrice", ReplyAction="http://tempuri.org/ICarComp/getPriceResponse")]
        System.Threading.Tasks.Task<int> getPriceAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarComp/getProductionYear", ReplyAction="http://tempuri.org/ICarComp/getProductionYearResponse")]
        int getProductionYear(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarComp/getProductionYear", ReplyAction="http://tempuri.org/ICarComp/getProductionYearResponse")]
        System.Threading.Tasks.Task<int> getProductionYearAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarComp/getCars", ReplyAction="http://tempuri.org/ICarComp/getCarsResponse")]
        ClientService1.ServiceReference1.Car[] getCars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarComp/getCars", ReplyAction="http://tempuri.org/ICarComp/getCarsResponse")]
        System.Threading.Tasks.Task<ClientService1.ServiceReference1.Car[]> getCarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICarComp/getCarsByBrand")]
        void getCarsByBrand(string brand);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICarComp/getCarsByBrand")]
        System.Threading.Tasks.Task getCarsByBrandAsync(string brand);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICarComp/getCarsByYear")]
        void getCarsByYear(int year);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICarComp/getCarsByYear")]
        System.Threading.Tasks.Task getCarsByYearAsync(int year);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICarCompCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICarComp/BrandResult")]
        void BrandResult(int result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICarComp/YearResult")]
        void YearResult(int result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICarCompChannel : ClientService1.ServiceReference1.ICarComp, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CarCompClient : System.ServiceModel.DuplexClientBase<ClientService1.ServiceReference1.ICarComp>, ClientService1.ServiceReference1.ICarComp {
        
        public CarCompClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public CarCompClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public CarCompClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CarCompClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CarCompClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool addCar(ClientService1.ServiceReference1.Car n1) {
            return base.Channel.addCar(n1);
        }
        
        public System.Threading.Tasks.Task<bool> addCarAsync(ClientService1.ServiceReference1.Car n1) {
            return base.Channel.addCarAsync(n1);
        }
        
        public bool removeCar(string name) {
            return base.Channel.removeCar(name);
        }
        
        public System.Threading.Tasks.Task<bool> removeCarAsync(string name) {
            return base.Channel.removeCarAsync(name);
        }
        
        public ClientService1.ServiceReference1.Car getCar(string name) {
            return base.Channel.getCar(name);
        }
        
        public System.Threading.Tasks.Task<ClientService1.ServiceReference1.Car> getCarAsync(string name) {
            return base.Channel.getCarAsync(name);
        }
        
        public string getBrand(string name) {
            return base.Channel.getBrand(name);
        }
        
        public System.Threading.Tasks.Task<string> getBrandAsync(string name) {
            return base.Channel.getBrandAsync(name);
        }
        
        public int getPrice(string name) {
            return base.Channel.getPrice(name);
        }
        
        public System.Threading.Tasks.Task<int> getPriceAsync(string name) {
            return base.Channel.getPriceAsync(name);
        }
        
        public int getProductionYear(string name) {
            return base.Channel.getProductionYear(name);
        }
        
        public System.Threading.Tasks.Task<int> getProductionYearAsync(string name) {
            return base.Channel.getProductionYearAsync(name);
        }
        
        public ClientService1.ServiceReference1.Car[] getCars() {
            return base.Channel.getCars();
        }
        
        public System.Threading.Tasks.Task<ClientService1.ServiceReference1.Car[]> getCarsAsync() {
            return base.Channel.getCarsAsync();
        }
        
        public void getCarsByBrand(string brand) {
            base.Channel.getCarsByBrand(brand);
        }
        
        public System.Threading.Tasks.Task getCarsByBrandAsync(string brand) {
            return base.Channel.getCarsByBrandAsync(brand);
        }
        
        public void getCarsByYear(int year) {
            base.Channel.getCarsByYear(year);
        }
        
        public System.Threading.Tasks.Task getCarsByYearAsync(int year) {
            return base.Channel.getCarsByYearAsync(year);
        }
    }
}
